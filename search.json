[{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://atorus-research.github.io/datasetjson/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2023 Atorus Research, Inc.  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://atorus-research.github.io/datasetjson/articles/getting_started.html","id":"using-datasetjson","dir":"Articles","previous_headings":"","what":"Using datasetjson","title":"Getting Started","text":"datasetjson works allowing take data frame apply necessary attributes required CDISC Dataset JSON. goal make experience simple. can write Dataset JSON file disk, first need build Dataset JSON object. example call looks like : minimum information required provide create datasetjson object. parameters can described follows: input data frame iris item_id, can described “Object Dataset”, key value unique identifier dataset, corresponding ItemGroupDef/@OID Define-XML. name, dataset name label, dataset label, finally items, variable level metadata dataset. items parameter special , provide data frame necessary variable metadata. Take look iris_items data frame. data frame 7 columns, 4 strictly required. defined CDISC Dataset JSON Specification. data within dataframe ultimate populates items element Dataset JSON file. OID, name, label, type columns required must populated variable. Note type column list allowable values: string integer float double decimal boolean information must provided directly user. Note type conversions data performed datasetjson package. displayFormat column inherently refers display formats used within SAS.","code":"ds_json <- dataset_json(iris[1:5, ], \"IG.IRIS\", \"IRIS\", \"Iris\", iris_items) iris_items #>                  OID         name          label   type length displayFormat #> 1 IT.IR.Sepal.Length Sepal.Length   Sepal Length  float     NA          <NA> #> 2  IT.IR.Sepal.Width  Sepal.Width    Sepal Width  float     NA          <NA> #> 3 IT.IR.Petal.Length Petal.Length   Petal Length  float     NA          <NA> #> 4  IT.IR.Petal.Width  Petal.Width    Petal Width  float     NA          <NA> #> 5      IT.IR.Species      Species Flower Species string     10          <NA> #>   keySequence #> 1           2 #> 2          NA #> 3           3 #> 4          NA #> 5           1"},{"path":"https://atorus-research.github.io/datasetjson/articles/getting_started.html","id":"setting-other-data-attributes","dir":"Articles","previous_headings":"Using datasetjson","what":"Setting Other Data Attributes","title":"Getting Started","text":"Dataset JSON specification number attributes available beyond normal ones present R data frame. can applied using variety setter functions directly dataset JSON object. practical setting, applying attributes creation dataset JSON file tedious, present challenge fields update - text updated program individually. reason, datasetjson package allows use pre-built objects create datasetjson object. practically, just file_meta data_meta provided, dataset_metadata provided directly dataset_json.","code":"ds_updated <- ds_json |>   set_data_type(\"referenceData\") |>   set_file_oid(\"/some/path\") |>   set_metadata_ref(\"some/define.xml\") |>   set_metadata_version(\"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\") |>   set_originator(\"Some Org\") |>   set_source_system(\"source system\", \"1.0\") |>   set_study_oid(\"SOMESTUDY\") file_meta <- file_metadata(   originator = \"Some Org\",   sys = \"source system\",   sys_version = \"1.0\" )  data_meta <- data_metadata(   study = \"SOMESTUDY\",   metadata_version = \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\",   metadata_ref = \"some/define.xml\" )  dataset_meta <- dataset_metadata(   item_id = \"IG.IRIS\",   name = \"IRIS\",   label = \"Iris\",   items = iris_items )  ds_json_from_meta <- dataset_json(   iris,   dataset_meta = dataset_meta,   file_meta = file_meta,   data_meta = data_meta ) file_meta <- file_metadata(   originator = \"Some Org\",   sys = \"source system\",   sys_version = \"1.0\" )  data_meta <- data_metadata(   study = \"SOMESTUDY\",   metadata_version = \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\",   metadata_ref = \"some/define.xml\" )   ds_json_from_meta <- dataset_json(   iris,   item_id = \"IG.IRIS\",   name = \"IRIS\",   label = \"Iris\",   items = iris_items,   file_meta = file_meta,   data_meta = data_meta )"},{"path":"https://atorus-research.github.io/datasetjson/articles/getting_started.html","id":"writing-and-reading","dir":"Articles","previous_headings":"Using datasetjson","what":"Writing and Reading","title":"Getting Started","text":"datasetjson object allows collect information needed generate Dataset JSON file, write dataset need use write_dataset_json() file. Dataset JSON object available, need object name file path. write_dataset_json() also option return JSON output character string. Similarly, read Dataset JSON object, can use function read_dataset_json(). function return dataframe , ready use. read, provide file path. can also provide single element character vector JSON text already read . data frame ’s read carries number attributes. example, opening dataframe within RStudio IDE present variable labels. data available within Dataset JSON file ultimately attached imported data frame. variable level metadata, attributes applied directly columns.","code":"write_dataset_json(ds_updated, file=\"iris.json\") js <- write_dataset_json(ds_updated, pretty=TRUE) cat(js) #> { #>   \"creationDateTime\": \"2023-11-17T14:01:02\", #>   \"datasetJSONVersion\": \"1.0.0\", #>   \"fileOID\": \"/some/path\", #>   \"originator\": \"Some Org\", #>   \"sourceSystem\": \"source system\", #>   \"sourceSystemVersion\": \"1.0\", #>   \"referenceData\": { #>     \"studyOID\": \"SOMESTUDY\", #>     \"metaDataVersionOID\": \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\", #>     \"metaDataRef\": \"some/define.xml\", #>     \"itemGroupData\": { #>       \"IG.IRIS\": { #>         \"records\": 5, #>         \"name\": \"IRIS\", #>         \"label\": \"Iris\", #>         \"items\": [ #>           { #>             \"OID\": \"ITEMGROUPDATASEQ\", #>             \"name\": \"ITEMGROUPDATASEQ\", #>             \"label\": \"Record Identifier\", #>             \"type\": \"integer\" #>           }, #>           { #>             \"OID\": \"IT.IR.Sepal.Length\", #>             \"name\": \"Sepal.Length\", #>             \"label\": \"Sepal Length\", #>             \"type\": \"float\", #>             \"keySequence\": 2 #>           }, #>           { #>             \"OID\": \"IT.IR.Sepal.Width\", #>             \"name\": \"Sepal.Width\", #>             \"label\": \"Sepal Width\", #>             \"type\": \"float\" #>           }, #>           { #>             \"OID\": \"IT.IR.Petal.Length\", #>             \"name\": \"Petal.Length\", #>             \"label\": \"Petal Length\", #>             \"type\": \"float\", #>             \"keySequence\": 3 #>           }, #>           { #>             \"OID\": \"IT.IR.Petal.Width\", #>             \"name\": \"Petal.Width\", #>             \"label\": \"Petal Width\", #>             \"type\": \"float\" #>           }, #>           { #>             \"OID\": \"IT.IR.Species\", #>             \"name\": \"Species\", #>             \"label\": \"Flower Species\", #>             \"type\": \"string\", #>             \"length\": 10, #>             \"keySequence\": 1 #>           } #>         ], #>         \"itemData\": [ #>           [1, 5.1, 3.5, 1.4, 0.2, \"setosa\"], #>           [2, 4.9, 3, 1.4, 0.2, \"setosa\"], #>           [3, 4.7, 3.2, 1.3, 0.2, \"setosa\"], #>           [4, 4.6, 3.1, 1.5, 0.2, \"setosa\"], #>           [5, 5, 3.6, 1.4, 0.2, \"setosa\"] #>         ] #>       } #>     } #>   } #> } read_dataset_json(\"path/to/file\") dat <- read_dataset_json(js) attributes(dat) #> $names #> [1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"      #>  #> $class #> [1] \"data.frame\" #>  #> $row.names #> [1] 1 2 3 4 5 #>  #> $creationDateTime #> [1] \"2023-11-17T14:01:02\" #>  #> $datasetJSONVersion #> [1] \"1.0.0\" #>  #> $fileOID #> [1] \"/some/path\" #>  #> $originator #> [1] \"Some Org\" #>  #> $sourceSystem #> [1] \"source system\" #>  #> $sourceSystemVersion #> [1] \"1.0\" #>  #> $name #> [1] \"IRIS\" #>  #> $records #> [1] 5 #>  #> $label #> [1] \"Iris\" #>  #> $referenceData #> $referenceData$studyOID #> [1] \"SOMESTUDY\" #>  #> $referenceData$metaDataVersionOID #> [1] \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\" #>  #> $referenceData$metaDataRef #> [1] \"some/define.xml\" #>  #> $referenceData$itemGroupData #> [1] \"IG.IRIS\" attributes(dat$Species) #> $label #> [1] \"Flower Species\" #>  #> $OID #> [1] \"IT.IR.Species\" #>  #> $length #> [1] 10 #>  #> $type #> [1] \"string\" #>  #> $keySequence #> [1] 1"},{"path":"https://atorus-research.github.io/datasetjson/articles/odm_details.html","id":"fileoid","dir":"Articles","previous_headings":"","what":"fileOID","title":"Notes on ODM V2","text":"FileOIDs universally unique possible. One way ensure prefix every FileOID internet domain name owned creator ODM file database (followed forward slash, “/”). example, FileOID=“BestPharmaceuticals.com/Study5894/1” might good way denote first file series study 5894 Best Pharmaceuticals. Reference link","code":""},{"path":"https://atorus-research.github.io/datasetjson/articles/odm_details.html","id":"asofdatetime-and-creationdatetime","dir":"Articles","previous_headings":"","what":"asOfDateTime and creationDateTime","title":"Notes on ODM V2","text":"creationDateTime attribute indicates ODM document created. contrast, asOfDateTime attribute tells document content accurate specifying date/time source database queried create ODM document. particular importance series files used give evolving view changing database. Reference link","code":""},{"path":"https://atorus-research.github.io/datasetjson/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Stackhouse. Author, maintainer. Nicholas Masel. Author.","code":""},{"path":"https://atorus-research.github.io/datasetjson/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stackhouse M, Masel N (2023). datasetjson: Read Write CDISC Dataset JSON Files. R package version 0.1.0, https://github.com/atorus-research/datasetjson.","code":"@Manual{,   title = {datasetjson: Read and Write CDISC Dataset JSON Files},   author = {Mike Stackhouse and Nicholas Masel},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/atorus-research/datasetjson}, }"},{"path":"https://atorus-research.github.io/datasetjson/index.html","id":"datasetjson-","dir":"","previous_headings":"","what":"Read and Write CDISC Dataset JSON Files","title":"Read and Write CDISC Dataset JSON Files","text":"Welcome datasetjson. datasetjson R package built read write CDISC Dataset JSON formatted datasets. always, welcome feedback. spot bug, like see new feature, documentation unclear - submit issue GitHub right .","code":""},{"path":"https://atorus-research.github.io/datasetjson/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read and Write CDISC Dataset JSON Files","text":"can install datasetjson :","code":"# Install from CRAN: install.packages(\"datasetjson\")  # Or install the development version: devtools::install_github(\"https://github.com/atorus-research/datasetjson.git\", ref=\"dev\")"},{"path":"https://atorus-research.github.io/datasetjson/index.html","id":"using-datasetjson","dir":"","previous_headings":"","what":"Using datasetjson","title":"Read and Write CDISC Dataset JSON Files","text":"datasetjson works allowing take data frame apply necessary attributes required CDISC Dataset JSON. goal make experience simple. can write Dataset JSON file disk, first need build Dataset JSON object. example call looks like : attach necessary metadata (can’t inferred input dataframe) datasetjson object, can use variety setter functions: settings provided, dataset_json() default fields “NA” compliant file can still generated. datasetjson object prepared necessary metadata, can use write_dataset_json() write file disk. don’t provide file path, JSON text return directly. read Dataset JSON file, can use read_dataset_json(). can either provide path JSON file, already JSON text loaded character string, can provide directly. data frame ’s returned enriched attributes available Dataset JSON format. example, opening dataframe within RStudio IDE present variable labels. variable attached attributes individual columns, file level metadata attached attributes data frame : Note Dataset JSON early CDISC standard still subject change, package updated. Backwards compatibility enforced standard stable. , recommended use package within production activities.","code":"ds_json <- dataset_json(iris[1:5, ], \"IG.IRIS\", \"IRIS\", \"Iris\", iris_items) ds_updated <- ds_json |>   set_data_type(\"referenceData\") |>   set_file_oid(\"/some/path\") |>   set_metadata_ref(\"some/define.xml\") |>   set_metadata_version(\"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\") |>   set_originator(\"Some Org\") |>   set_source_system(\"source system\", \"1.0\") |>   set_study_oid(\"SOMESTUDY\") write_dataset_json(ds_updated, file = \"./iris.json\") js_text <- write_dataset_json(ds_updated, pretty=TRUE) cat(js_text) ## { ##   \"creationDateTime\": \"2023-11-17T13:23:08\", ##   \"datasetJSONVersion\": \"1.0.0\", ##   \"fileOID\": \"/some/path\", ##   \"originator\": \"Some Org\", ##   \"sourceSystem\": \"source system\", ##   \"sourceSystemVersion\": \"1.0\", ##   \"referenceData\": { ##     \"studyOID\": \"SOMESTUDY\", ##     \"metaDataVersionOID\": \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\", ##     \"metaDataRef\": \"some/define.xml\", ##     \"itemGroupData\": { ##       \"IG.IRIS\": { ##         \"records\": 5, ##         \"name\": \"IRIS\", ##         \"label\": \"Iris\", ##         \"items\": [ ##           { ##             \"OID\": \"ITEMGROUPDATASEQ\", ##             \"name\": \"ITEMGROUPDATASEQ\", ##             \"label\": \"Record Identifier\", ##             \"type\": \"integer\" ##           }, ##           { ##             \"OID\": \"IT.IR.Sepal.Length\", ##             \"name\": \"Sepal.Length\", ##             \"label\": \"Sepal Length\", ##             \"type\": \"float\", ##             \"keySequence\": 2 ##           }, ##           { ##             \"OID\": \"IT.IR.Sepal.Width\", ##             \"name\": \"Sepal.Width\", ##             \"label\": \"Sepal Width\", ##             \"type\": \"float\" ##           }, ##           { ##             \"OID\": \"IT.IR.Petal.Length\", ##             \"name\": \"Petal.Length\", ##             \"label\": \"Petal Length\", ##             \"type\": \"float\", ##             \"keySequence\": 3 ##           }, ##           { ##             \"OID\": \"IT.IR.Petal.Width\", ##             \"name\": \"Petal.Width\", ##             \"label\": \"Petal Width\", ##             \"type\": \"float\" ##           }, ##           { ##             \"OID\": \"IT.IR.Species\", ##             \"name\": \"Species\", ##             \"label\": \"Flower Species\", ##             \"type\": \"string\", ##             \"length\": 10, ##             \"keySequence\": 1 ##           } ##         ], ##         \"itemData\": [ ##           [1, 5.1, 3.5, 1.4, 0.2, \"setosa\"], ##           [2, 4.9, 3, 1.4, 0.2, \"setosa\"], ##           [3, 4.7, 3.2, 1.3, 0.2, \"setosa\"], ##           [4, 4.6, 3.1, 1.5, 0.2, \"setosa\"], ##           [5, 5, 3.6, 1.4, 0.2, \"setosa\"] ##         ] ##       } ##     } ##   } ## } dat <- read_dataset_json(js_text) dat ##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1          5.1         3.5          1.4         0.2  setosa ## 2          4.9         3.0          1.4         0.2  setosa ## 3          4.7         3.2          1.3         0.2  setosa ## 4          4.6         3.1          1.5         0.2  setosa ## 5          5.0         3.6          1.4         0.2  setosa print(attr(dat, \"creationDateTime\")) ## [1] \"2023-11-17T13:23:08\" print(attr(dat$Sepal.Length, \"OID\")) ## [1] \"IT.IR.Sepal.Length\" print(attr(dat$Sepal.Width, \"type\")) ## [1] \"float\""},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Read and Write CDISC Dataset JSON Files","text":"Thank Ben Straub Eric Simms (GSK) help input original CDISC Dataset JSON hackathon motivated work.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the data metadata container for a Dataset JSON object — data_metadata","title":"Create the data metadata container for a Dataset JSON object — data_metadata","text":"Create data metadata container Dataset JSON object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the data metadata container for a Dataset JSON object — data_metadata","text":"","code":"data_metadata(study = NULL, metadata_version = NULL, metadata_ref = NULL)"},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the data metadata container for a Dataset JSON object — data_metadata","text":"study Study OID value metadata_version Metadata version OID value metadata_ref Metadata reference (.e. path Define.xml)","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the data metadata container for a Dataset JSON object — data_metadata","text":"data_metadata object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the data metadata container for a Dataset JSON object — data_metadata","text":"","code":"# Create object directly data_meta <- data_metadata(   study = \"SOMESTUDY\",   metadata_version = \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\",   metadata_ref = \"some/define.xml\" )  # Use setter functions data_meta <- data_metadata() data_meta_updated <- set_metadata_ref(data_meta, \"some/define.xml\") data_meta_updated <- set_metadata_version(data_meta_updated, \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\") data_meta_updated <- set_study_oid(data_meta_updated, \"SOMESTUDY\")"},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata_setters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data metadata parameters — set_study_oid","title":"Set data metadata parameters — set_study_oid","text":"set functions","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata_setters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data metadata parameters — set_study_oid","text":"","code":"set_study_oid(x, study, ...)  set_metadata_version(x, metadata_version, ...)  set_metadata_ref(x, metadata_ref)"},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata_setters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data metadata parameters — set_study_oid","text":"x data metadata datasetjson object study Study OID value ... Additional parameters metadata_version Metadata version OID value metadata_ref Metadata reference (.e. path Define.xml)","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata_setters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data metadata parameters — set_study_oid","text":"datasetjson data_metadata object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/data_metadata_setters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set data metadata parameters — set_study_oid","text":"","code":"data_meta <- data_metadata() data_meta_updated <- set_metadata_ref(data_meta, \"some/define.xml\") data_meta_updated <- set_metadata_version(data_meta_updated, \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\") data_meta_updated <- set_study_oid(data_meta_updated, \"SOMESTUDY\")"},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Dataset JSON Object — dataset_json","title":"Create a Dataset JSON Object — dataset_json","text":"Create base object used write Dataset JSON file.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Dataset JSON Object — dataset_json","text":"","code":"dataset_json(   .data,   item_id,   name,   label,   items,   dataset_meta,   version = \"1.0.0\",   data_type = c(\"clinicalData\", \"referenceData\"),   file_meta = file_metadata(),   data_meta = data_metadata() )"},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Dataset JSON Object — dataset_json","text":".data Input data contain within Dataset JSON file. Written itemData parameter. item_id ID used label dataset itemGroupData parameter. Defined \"Object Datasets. Key value unique identifier Dataset, corresponding ItemGroupDef/@OID Define-XML.\" name Dataset name label Dataset Label items Variable metadata dataset_meta dataset_metadata object holding pre-specified dataset metadata. version Version Dataset JSON schema follow. data_type Type data written. clinicalData subject level data, referenceData non-subject level data (.e. TDMs, Associated Persons) file_meta file_metadata object holding pre-specified file metadata data_meta data_metadata object holding pre-specified data metadata","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Dataset JSON Object — dataset_json","text":"dataset_json object pertaining specific Dataset JSON version specific","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Dataset JSON Object — dataset_json","text":"","code":"# Create a basic object ds_json <- dataset_json(iris, \"IG.IRIS\", \"IRIS\", \"Iris\", iris_items)  # Attach attributes directly ds_json_updated <- set_data_type(ds_json, \"referenceData\") ds_json_updated <- set_file_oid(ds_json_updated, \"/some/path\") ds_json_updated <- set_metadata_ref(ds_json_updated, \"some/define.xml\") ds_json_updated <- set_metadata_version(ds_json_updated, \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\") ds_json_updated <- set_originator(ds_json_updated, \"Some Org\") ds_json_updated <- set_source_system(ds_json_updated, \"source system\", \"1.0\") ds_json_updated <- set_study_oid(ds_json_updated, \"SOMESTUDY\")  # Create independent objects for metadata sections first file_meta <- file_metadata(   originator = \"Some Org\",   sys = \"source system\",   sys_version = \"1.0\" )  data_meta <- data_metadata(   study = \"SOMESTUDY\",   metadata_version = \"MDV.MSGv2.0.SDTMIG.3.3.SDTM.1.7\",   metadata_ref = \"some/define.xml\" )  dataset_meta <- dataset_metadata(   item_id = \"IG.IRIS\",   name = \"IRIS\",   label = \"Iris\",   items = iris_items )  ds_json_from_meta <- dataset_json(   iris,   dataset_meta = dataset_meta,   file_meta = file_meta,   data_meta = data_meta   )"},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an individual element that fills the itemGroupData field — dataset_metadata","title":"Generate an individual element that fills the itemGroupData field — dataset_metadata","text":"Generate individual element fills itemGroupData field","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an individual element that fills the itemGroupData field — dataset_metadata","text":"","code":"dataset_metadata(item_id, name, label, items, .data)"},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an individual element that fills the itemGroupData field — dataset_metadata","text":"item_id Data Object ID item Dataset JSON object, corresponding ItemGroupDef/@OID Define-XML. name Dataset name label Dataset Label items Variable metadata .data Dataframe written Dataset JSON file","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an individual element that fills the itemGroupData field — dataset_metadata","text":"dataset_metadata object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/dataset_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an individual element that fills the itemGroupData field — dataset_metadata","text":"","code":"dataset_meta <- dataset_metadata(   item_id = \"IG.IRIS\",   name = \"IRIS\",   label = \"Iris\",   items = iris_items )"},{"path":"https://atorus-research.github.io/datasetjson/reference/datasetjson-package.html","id":null,"dir":"Reference","previous_headings":"","what":"datasetjson: Read and Write CDISC Dataset JSON Files — datasetjson-package","title":"datasetjson: Read and Write CDISC Dataset JSON Files — datasetjson-package","text":"Read, construct write CDISC (Clinical Data Interchange Standards Consortium) Dataset JSON (JavaScript Object Notation) files, validating per Dataset JSON schema file, described CDISC (2023) https://www.cdisc.org/dataset-json.","code":""},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/reference/datasetjson-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"datasetjson: Read and Write CDISC Dataset JSON Files — datasetjson-package","text":"Maintainer: Mike Stackhouse mike.stackhouse@atorusresearch.com (ORCID) Authors: Nicholas Masel nmasel@.jnj.com","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a file metadata object — file_metadata","title":"Create a file metadata object — file_metadata","text":"Create file metadata object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a file metadata object — file_metadata","text":"","code":"file_metadata(   originator = NULL,   sys = NULL,   sys_version = NULL,   file_oid = NULL,   version = \"1.0.0\" )"},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a file metadata object — file_metadata","text":"originator originator parameter, defined \"organization generated Dataset-JSON file.\" sys sourceSystem parameter, defined \"computer system database management system source information file.\" sys_version sourceSystemVersion, defined \"version sourceSystem\" file_oid fileOID parameter, defined \"unique identifier file.\" version Dataset JSON schema version used","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a file metadata object — file_metadata","text":"file_metadata object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a file metadata object — file_metadata","text":"","code":"# Create using parameters file_meta <- file_metadata(     originator = \"Some Org\",     sys = \"source system\",     sys_version = \"1.0\"   )  # Set parameters after file_meta <- file_metadata()  file_meta_updated <- set_file_oid(file_meta, \"/some/path\") file_meta_updated <- set_originator(file_meta_updated, \"Some Org\") file_meta_updated <- set_source_system(file_meta_updated, \"source system\", \"1.0\")"},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata_setters.html","id":null,"dir":"Reference","previous_headings":"","what":"File Metadata Setters — set_source_system","title":"File Metadata Setters — set_source_system","text":"Set information file source system used generate Dataset JSON object.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata_setters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File Metadata Setters — set_source_system","text":"","code":"set_source_system(x, sys, sys_version)  set_originator(x, originator)  set_file_oid(x, file_oid)  set_data_type(x, data_type = c(\"clinicalData\", \"referenceData\"))"},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata_setters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File Metadata Setters — set_source_system","text":"x datasetjson object sys sourceSystem parameter, defined \"computer system database management system source information file.\" sys_version sourceSystemVersion, defined \"version sourceSystem\" originator originator parameter, defined \"organization generated Dataset-JSON file.\" file_oid fileOID parameter, defined \"unique identifier file.\" data_type Type data written. clinicalData subject level data, referenceData non-subject level data (.e. TDMs, Associated Persons)","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata_setters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File Metadata Setters — set_source_system","text":"datasetjson file_metadata object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata_setters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"File Metadata Setters — set_source_system","text":"fileOID parameter structured following description outlined ODM V2.0 specification. \"FileOIDs universally unique possible. One way ensure prefix every FileOID internet domain name owned creator ODM file database (followed forward slash, \"/\"). example, FileOID=\"BestPharmaceuticals.com/Study5894/1\" might good way denote first file series study 5894 Best Pharmaceuticals.\"","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/file_metadata_setters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File Metadata Setters — set_source_system","text":"","code":"file_meta <- file_metadata()  file_meta_updated <- set_file_oid(file_meta, \"/some/path\") file_meta_updated <- set_originator(file_meta_updated, \"Some Org\") file_meta_updated <- set_source_system(file_meta_updated, \"source system\", \"1.0\")"},{"path":"https://atorus-research.github.io/datasetjson/reference/iris_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Variable Metadata for Iris — iris_items","title":"Example Variable Metadata for Iris — iris_items","text":"Example necessary variable metadata included Dataset JSON file based Iris data frame.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/iris_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Variable Metadata for Iris — iris_items","text":"","code":"iris_items"},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/reference/iris_items.html","id":"iris-items-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"iris_items A data frame with 5 rows and 6 columns:","title":"Example Variable Metadata for Iris — iris_items","text":"OID Unique identifier Variable. Must correspond ItemDef/@OID Define-XML. name Display format supports data visualization numeric float date values. label Label Variable type Data type Variable length Length Variable displayFormat Display format supports data visualization numeric float date values. keySequence Indicates item key variable dataset structure. also provides ordering keys.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/read_dataset_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Dataset JSON to datasetjson object — read_dataset_json","title":"Read a Dataset JSON to datasetjson object — read_dataset_json","text":"function validates dataset JSON file Dataset JSON schema, valid returns datasetjson object. Dataset JSON file can either file path disk URL contains Dataset JSON file.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/read_dataset_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Dataset JSON to datasetjson object — read_dataset_json","text":"","code":"read_dataset_json(file)"},{"path":"https://atorus-research.github.io/datasetjson/reference/read_dataset_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Dataset JSON to datasetjson object — read_dataset_json","text":"file File path URL Dataset JSON file","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/read_dataset_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Dataset JSON to datasetjson object — read_dataset_json","text":"datasetjson object","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/read_dataset_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Dataset JSON to datasetjson object — read_dataset_json","text":"","code":"# Read from disk if (FALSE) {   dat <- read_dataset_json(\"path/to/file.json\")   dat <- dataset_json('https://www.somesite.com/file.json') }  # Read from an already imported character vector ds_json <- dataset_json(iris, \"IG.IRIS\", \"IRIS\", \"Iris\", iris_items) js <- write_dataset_json(ds_json) dat <- read_dataset_json(js)"},{"path":"https://atorus-research.github.io/datasetjson/reference/sas_date_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"A List of valid SAS(c) date formats — sas_date_formats","title":"A List of valid SAS(c) date formats — sas_date_formats","text":"Valid SAS(c) date formats pulled https://documentation.sas.com/doc/en/vdmmlcdc/8.1/ds2pg/p0bz5detpfj01qn1kz2in7xymkdl.htm","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/sas_date_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A List of valid SAS(c) date formats — sas_date_formats","text":"","code":"sas_date_formats"},{"path":[]},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/reference/sas_datetime_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"A List of valid SAS(c) datetime formats — sas_datetime_formats","title":"A List of valid SAS(c) datetime formats — sas_datetime_formats","text":"Valid SAS(c) datetime formats pulled https://documentation.sas.com/doc/en/vdmmlcdc/8.1/ds2pg/p0bz5detpfj01qn1kz2in7xymkdl.htm","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/sas_datetime_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A List of valid SAS(c) datetime formats — sas_datetime_formats","text":"","code":"sas_datetime_formats"},{"path":[]},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/reference/sas_time_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"A List of valid SAS(c) time formats — sas_time_formats","title":"A List of valid SAS(c) time formats — sas_time_formats","text":"Valid SAS(c) time formats pulled https://documentation.sas.com/doc/en/vdmmlcdc/8.1/ds2pg/p0bz5detpfj01qn1kz2in7xymkdl.htm","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/sas_time_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A List of valid SAS(c) time formats — sas_time_formats","text":"","code":"sas_time_formats"},{"path":[]},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/reference/schema_1_0_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset JSON Schema Version 1.0.0 — schema_1_0_0","title":"Dataset JSON Schema Version 1.0.0 — schema_1_0_0","text":"object character vector holding schema Dataset JSON Version 1.0.0","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/schema_1_0_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset JSON Schema Version 1.0.0 — schema_1_0_0","text":"","code":"schema_1_0_0"},{"path":[]},{"path":[]},{"path":"https://atorus-research.github.io/datasetjson/reference/validate_dataset_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a Dataset JSON file — validate_dataset_json","title":"Validate a Dataset JSON file — validate_dataset_json","text":"function calls jsonvalidate::json_validate() directly, parameters necessary retrieve error information invalid JSON file per Dataset JSON schema.","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/validate_dataset_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a Dataset JSON file — validate_dataset_json","text":"","code":"validate_dataset_json(x)"},{"path":"https://atorus-research.github.io/datasetjson/reference/validate_dataset_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a Dataset JSON file — validate_dataset_json","text":"x File path URL Dataset JSON file, character vector holding JSON text","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/validate_dataset_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a Dataset JSON file — validate_dataset_json","text":"data frame","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/validate_dataset_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a Dataset JSON file — validate_dataset_json","text":"","code":"if (FALSE) {   validate_dataset_json('path/to/file.json')   validate_dataset_json('https://www.somesite.com/file.json') }  ds_json <- dataset_json(iris, \"IG.IRIS\", \"IRIS\", \"Iris\", iris_items) js <- write_dataset_json(ds_json)  validate_dataset_json(js) #> File is valid per the Dataset JSON v1.0.0 schema #> [1] instancePath schemaPath   keyword      params       message      #> [6] schema       parentSchema dataPath     #> <0 rows> (or 0-length row.names)"},{"path":"https://atorus-research.github.io/datasetjson/reference/write_dataset_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Write out a Dataset JSON file — write_dataset_json","title":"Write out a Dataset JSON file — write_dataset_json","text":"Write Dataset JSON file","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/write_dataset_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write out a Dataset JSON file — write_dataset_json","text":"","code":"write_dataset_json(x, file, pretty = FALSE)"},{"path":"https://atorus-research.github.io/datasetjson/reference/write_dataset_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write out a Dataset JSON file — write_dataset_json","text":"x datasetjson object file File path save Dataset JSON file pretty TRUE, write readable formatting","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/write_dataset_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write out a Dataset JSON file — write_dataset_json","text":"NULL file written disk, otherwise character string","code":""},{"path":"https://atorus-research.github.io/datasetjson/reference/write_dataset_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write out a Dataset JSON file — write_dataset_json","text":"","code":"# Write to character object ds_json <- dataset_json(iris, \"IG.IRIS\", \"IRIS\", \"Iris\", iris_items) js <- write_dataset_json(ds_json)  # Write to disk if (FALSE) {   write_dataset_json(ds_json, \"path/to/file.json\") }"}]
